name: Update Stations Data

on:
  issue_comment:
    types: [created]

jobs:
  update-stations:
    if: |
      (github.event.issue.pull_request != null || github.event.issue.number != null) &&
      (contains(github.event.comment.body, ' /update_station') ||
       startsWith(github.event.comment.body, '/update_station'))
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
      - name: Add reaction to trigger comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: eyes
      
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      
      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"
      
      - name: Install dependencies
        run: |
          uv sync --dev
      
      - name: Create data directory
        run: |
          mkdir -p data
          echo "üìÅ Created data directory"
          
       - name: Run station crawler
         run: |
           echo "üöÄ Starting station data crawling..."
           uv run jp-transit stations crawl \
             --output data/stations.csv \
             --timeout 60
        
      - name: Check if data/stations.csv was created
        run: |
          if [ ! -f data/stations.csv ]; then
            echo "‚ùå Error: data/stations.csv was not created"
            exit 1
          fi
          echo "‚úÖ data/stations.csv created successfully"
          echo "üìä Station count: $(tail -n +2 data/stations.csv | wc -l)"
          
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
      - name: Commit and push changes
        run: |
          git add data/stations.csv
          if git diff --staged --quiet; then
            echo "üìù No changes to commit"
            echo "CHANGES_MADE=false" >> $GITHUB_ENV
          else
            timestamp=$(date '+%Y-%m-%d %H:%M:%S UTC')
            station_count=$(tail -n +2 data/stations.csv | wc -l)
            commit_msg="üìä Update stations data - ${station_count} stations"$'\n\n'"Auto-generated by GitHub Action on ${timestamp}"$'\n'"Triggered by: @${{ github.event.comment.user.login }}"$'\n'"Issue/PR: #${{ github.event.issue.number }}"
            git commit -m "${commit_msg}"
            git push
            echo "CHANGES_MADE=true" >> $GITHUB_ENV
            echo "STATION_COUNT=${station_count}" >> $GITHUB_ENV
          fi
          
      - name: Comment on success
        if: env.CHANGES_MADE == 'true'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ‚úÖ **Station data updated successfully!**
            
            üìä **Results:**
            - **Stations crawled:** ${{ env.STATION_COUNT }}
            - **File:** `data/stations.csv`
            - **Commit:** ${{ github.sha }}
            
            The latest station data has been committed to the repository. You can download the updated CSV file from the `data/` directory.
            
            ---
            *Triggered by /update_station command*
      
      - name: Comment on no changes
        if: env.CHANGES_MADE == 'false'
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ‚ÑπÔ∏è **No changes detected**
            
            The station crawling completed successfully, but no changes were detected in the data. The current `data/stations.csv` file is already up to date.
            
            ---
            *Triggered by /update_station command*
      
      - name: Add success reaction
        if: success()
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: hooray
          
      - name: Comment on failure
        if: failure()
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            ‚ùå **Station data update failed**
            
            There was an error while crawling or updating the station data. Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.
            
            Common issues:
            - Network connectivity problems during crawling
            - Rate limiting from the transit website
            - Parsing errors due to website changes
            
            ---
            *Triggered by /update_station command*
      
      - name: Add failure reaction
        if: failure()
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: confused